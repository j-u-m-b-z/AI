{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://pg2i4ekj00.execute-api.us-east-1.amazonaws.com/dev/classify';\n    this.isProcessing = false;\n    this.countdown = 15;\n    this.progressPercentage = 0;\n    this.isHuman = null;\n    this.confidence = 0;\n    this.sagemakerResult = '';\n    this.rekognitionResult = '';\n    this.agreement = false;\n    this.captured = false;\n    this.capturedImage = null;\n    this.aiBoxes = [];\n    this.isCameraActive = false;\n    this.videoStream = null;\n  }\n  triggerFileUpload() {\n    const fileInput = document.getElementById('uploadInput');\n    fileInput?.click();\n  }\n  onFileSelected(event) {\n    const input = event.target;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.capturedImage = e.target?.result;\n        this.captured = true;\n        this.generateAiBoxes();\n        this.startProcessing();\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  captureImage() {\n    if (!this.isCameraActive) {\n      this.openCamera();\n    } else {\n      this.takePhoto();\n      this.startProcessing();\n    }\n  }\n  openCamera() {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      this.videoStream = stream;\n      this.isCameraActive = true;\n      setTimeout(() => {\n        const videoEl = this.videoElement.nativeElement;\n        videoEl.srcObject = stream;\n      }, 100);\n    }).catch(error => console.error(\"Camera access denied:\", error));\n  }\n  takePhoto() {\n    if (this.videoElement && this.videoElement.nativeElement) {\n      const video = this.videoElement.nativeElement;\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      if (context) {\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n        this.capturedImage = canvas.toDataURL('image/png');\n        this.captured = true;\n        // Stop the camera\n        this.stopCamera();\n        // Generate AI boxes\n        this.generateAiBoxes();\n      }\n    }\n  }\n  stopCamera() {\n    this.isCameraActive = false;\n    if (this.videoStream) {\n      this.videoStream.getTracks().forEach(track => track.stop());\n      this.videoStream = null;\n    }\n  }\n  generateAiBoxes() {\n    if (!this.captured || !this.capturedImage) {\n      this.aiBoxes = [];\n      return;\n    }\n    this.aiBoxes = [];\n    for (let i = 0; i < 3; i++) {\n      this.aiBoxes.push({\n        left: Math.random() * 70 + 15,\n        top: Math.random() * 70 + 15,\n        size: Math.random() * 30 + 20\n      });\n    }\n  }\n  startProcessing() {\n    this.isProcessing = true;\n    this.countdown = 15;\n    this.progressPercentage = 0;\n    // Generate initial AI boxes\n    this.generateAiBoxes();\n    // Simulate API call with progress and moving AI boxes\n    this.interval = setInterval(() => {\n      this.countdown--;\n      this.progressPercentage = (15 - this.countdown) / 15 * 100;\n      // Update AI box positions every second to simulate movement\n      this.updateAiBoxPositions();\n      if (this.countdown <= 0) {\n        clearInterval(this.interval);\n        this.simulateResults();\n      }\n    }, 1000);\n    // Actual API call would be here\n    // this.http.post(this.apiUrl, { image: this.capturedImage }).subscribe(...)\n  }\n\n  updateAiBoxPositions() {\n    // Update existing AI boxes with new random positions\n    this.aiBoxes = this.aiBoxes.map(box => {\n      return {\n        left: Math.random() * 70 + 15,\n        top: Math.random() * 70 + 15,\n        size: Math.random() * 20 + 25 // Random size between 25px and 45px\n      };\n    });\n    // Occasionally add or remove a box to make it more dynamic\n    if (Math.random() > 0.7) {\n      if (this.aiBoxes.length < 5 && Math.random() > 0.5) {\n        // Add a new box\n        this.aiBoxes.push({\n          left: Math.random() * 70 + 15,\n          top: Math.random() * 70 + 15,\n          size: Math.random() * 20 + 25\n        });\n      } else if (this.aiBoxes.length > 1) {\n        // Remove a random box\n        const indexToRemove = Math.floor(Math.random() * this.aiBoxes.length);\n        this.aiBoxes.splice(indexToRemove, 1);\n      }\n    }\n  }\n  simulateResults() {\n    this.isProcessing = false;\n    // For demo purposes, generate random results\n    this.isHuman = Math.random() > 0.3; // 70% chance of being human\n    this.confidence = this.isHuman ? 0.7 + Math.random() * 0.3 : Math.random() * 0.7;\n    this.agreement = Math.random() > 0.2; // 80% chance of agreement\n  }\n\n  resetCapture() {\n    this.captured = false;\n    this.capturedImage = null;\n    this.aiBoxes = [];\n    this.isHuman = null;\n    this.confidence = 0;\n    this.agreement = false;\n    this.isProcessing = false;\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n};\n__decorate([ViewChild('videoElement')], AppComponent.prototype, \"videoElement\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./styles.css']\n})], AppComponent);","map":{"version":3,"names":["Component","ViewChild","AppComponent","constructor","http","apiUrl","isProcessing","countdown","progressPercentage","isHuman","confidence","sagemakerResult","rekognitionResult","agreement","captured","capturedImage","aiBoxes","isCameraActive","videoStream","triggerFileUpload","fileInput","document","getElementById","click","onFileSelected","event","input","target","files","length","file","reader","FileReader","onload","e","result","generateAiBoxes","startProcessing","readAsDataURL","captureImage","openCamera","takePhoto","navigator","mediaDevices","getUserMedia","video","then","stream","setTimeout","videoEl","videoElement","nativeElement","srcObject","catch","error","console","canvas","createElement","context","getContext","width","videoWidth","height","videoHeight","drawImage","toDataURL","stopCamera","getTracks","forEach","track","stop","i","push","left","Math","random","top","size","interval","setInterval","updateAiBoxPositions","clearInterval","simulateResults","map","box","indexToRemove","floor","splice","resetCapture","__decorate","selector","templateUrl","styleUrls"],"sources":["/mnt/d/repos/AWS/AI projects/POC_webapp/src/app/app.component.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./styles.css']\n})\nexport class AppComponent {\n  apiUrl = 'https://pg2i4ekj00.execute-api.us-east-1.amazonaws.com/dev/classify';\n  @ViewChild('videoElement') videoElement!: ElementRef;\n\n  isProcessing = false;\n  countdown = 15;\n  progressPercentage = 0;\n  interval: any;\n\n  isHuman: boolean | null = null;\n  confidence = 0;\n  sagemakerResult = '';\n  rekognitionResult = '';\n  agreement = false;\n\n  captured = false;\n  capturedImage: string | null = null;\n  aiBoxes: { left: number, top: number, size: number }[] = [];\n  \n  isCameraActive = false;\n  videoStream: MediaStream | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  triggerFileUpload() {\n    const fileInput = document.getElementById('uploadInput') as HTMLInputElement;\n    fileInput?.click();\n  }\n\n  onFileSelected(event: Event) {\n    const input = event.target as HTMLInputElement;\n    \n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      const reader = new FileReader();\n      \n      reader.onload = (e) => {\n        this.capturedImage = e.target?.result as string;\n        this.captured = true;\n        this.generateAiBoxes();\n        this.startProcessing();\n      };\n      \n      reader.readAsDataURL(file);\n    }\n  }\n\n  captureImage() {\n    if (!this.isCameraActive) {\n      this.openCamera();\n    } else {\n      this.takePhoto();\n      this.startProcessing();\n    }\n  }\n  \n  openCamera() {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        this.videoStream = stream;\n        this.isCameraActive = true;\n        setTimeout(() => {\n          const videoEl = this.videoElement.nativeElement;\n          videoEl.srcObject = stream;\n        }, 100);\n      })\n      .catch((error) => console.error(\"Camera access denied:\", error));\n  }\n  \n  takePhoto() {\n    if (this.videoElement && this.videoElement.nativeElement) {\n      const video = this.videoElement.nativeElement;\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      \n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      \n      if (context) {\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n        this.capturedImage = canvas.toDataURL('image/png');\n        this.captured = true;\n        \n        // Stop the camera\n        this.stopCamera();\n        \n        // Generate AI boxes\n        this.generateAiBoxes();\n      }\n    }\n  }\n  \n  stopCamera() {\n    this.isCameraActive = false;\n    \n    if (this.videoStream) {\n      this.videoStream.getTracks().forEach(track => track.stop());\n      this.videoStream = null;\n    }\n  }\n\n  generateAiBoxes() {\n    if (!this.captured || !this.capturedImage) {\n      this.aiBoxes = [];\n      return;\n    }\n  \n    this.aiBoxes = [];\n    for (let i = 0; i < 3; i++) {\n      this.aiBoxes.push({\n        left: Math.random() * 70 + 15,\n        top: Math.random() * 70 + 15,\n        size: Math.random() * 30 + 20\n      });\n    }\n  }\n  \n  startProcessing() {\n    this.isProcessing = true;\n    this.countdown = 15;\n    this.progressPercentage = 0;\n    \n    // Generate initial AI boxes\n    this.generateAiBoxes();\n    \n    // Simulate API call with progress and moving AI boxes\n    this.interval = setInterval(() => {\n      this.countdown--;\n      this.progressPercentage = ((15 - this.countdown) / 15) * 100;\n      \n      // Update AI box positions every second to simulate movement\n      this.updateAiBoxPositions();\n      \n      if (this.countdown <= 0) {\n        clearInterval(this.interval);\n        this.simulateResults();\n      }\n    }, 1000);\n    \n    // Actual API call would be here\n    // this.http.post(this.apiUrl, { image: this.capturedImage }).subscribe(...)\n  }\n  \n  updateAiBoxPositions() {\n    // Update existing AI boxes with new random positions\n    this.aiBoxes = this.aiBoxes.map(box => {\n      return {\n        left: Math.random() * 70 + 15,  // Random position between 15% and 85%\n        top: Math.random() * 70 + 15,   // Random position between 15% and 85%\n        size: Math.random() * 20 + 25   // Random size between 25px and 45px\n      };\n    });\n    \n    // Occasionally add or remove a box to make it more dynamic\n    if (Math.random() > 0.7) {\n      if (this.aiBoxes.length < 5 && Math.random() > 0.5) {\n        // Add a new box\n        this.aiBoxes.push({\n          left: Math.random() * 70 + 15,\n          top: Math.random() * 70 + 15,\n          size: Math.random() * 20 + 25\n        });\n      } else if (this.aiBoxes.length > 1) {\n        // Remove a random box\n        const indexToRemove = Math.floor(Math.random() * this.aiBoxes.length);\n        this.aiBoxes.splice(indexToRemove, 1);\n      }\n    }\n  }\n  \n  simulateResults() {\n    this.isProcessing = false;\n    \n    // For demo purposes, generate random results\n    this.isHuman = Math.random() > 0.3; // 70% chance of being human\n    this.confidence = this.isHuman ? 0.7 + (Math.random() * 0.3) : Math.random() * 0.7;\n    this.agreement = Math.random() > 0.2; // 80% chance of agreement\n  }\n  \n  resetCapture() {\n    this.captured = false;\n    this.capturedImage = null;\n    this.aiBoxes = [];\n    this.isHuman = null;\n    this.confidence = 0;\n    this.agreement = false;\n    this.isProcessing = false;\n    \n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}